{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OAGI,sBAAMC,SAjBW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAUlB,SAEI,uBACIO,KAAO,OACPC,MAAST,EACTU,SA3Bc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,+BCVnBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAUH,GAF5C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAEtB,MAAM,CAGFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAb3B,kBAoBbM,GApBa,4CAAH,sDCGPO,EAAe,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIjC,OAEI,sBAAKc,UAAY,yCAAjB,UAEI,qBAAKC,IAAMf,EAAKgB,IAAON,IACvB,4BAAIA,QCTHO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAIpB,ECJsB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgCA,OA3BAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAM,SAAAC,GAICC,QAAQC,IAAIF,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAM1B,CAACpB,IAWGqB,ED9B2BO,CAAa5B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAOtB,OAEI,qCAEI,oBAAIJ,UAAY,oCAAhB,SAAqDhB,IAErDoB,GAAW,mBAAGJ,UAAY,mCAAf,qBAEX,qBAAKA,UAAY,YAAjB,SAIYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADIA,EAAIC,aEzB/BkB,EAAe,WAIxB,MAAoC3C,mBAAS,CAAC,WAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAWA,OACI,qCAII,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAGQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEAA,SAAYA,GADNA,Y,MC1B/B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.97d765cb.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue (e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategories (cats => [ inputValue ,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n       \r\n\r\n        <form onSubmit = {handleSubmit}>\r\n\r\n            <input\r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n\r\n        </form>\r\n            \r\n            \r\n                \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n        setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n","\r\nexport const getGifs = async(category) => {     \r\n        \r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=PQbpX9MulVQJLwyyDMaAqNaPuhyaQMbi`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n            return{\r\n\r\n\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n\r\n\r\n    })\r\n\r\n   \r\n   return gifs;\r\n\r\n}","import React from 'react'\r\n\r\n\r\n\r\nexport const GiftGridItem = ({title, url}) => {\r\n\r\n    // console.log(title, url);\r\n\r\n    return (  \r\n        \r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n\r\n            <img src ={url} alt = {title}/>\r\n            <p>{title}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GiftGrid = ({category}) => {\r\n\r\n\r\n\r\n      const {data:images, loading} =  useFetchGifs(category);\r\n\r\n     \r\n\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <h3 className = \"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n           {loading && <p className = \"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className = \"card-grid\">\r\n\r\n\r\n                    {\r\n                        images.map(img => (\r\n                            <GiftGridItem\r\n                                key  = {img.id}   \r\n                                {...img}\r\n                            />\r\n                        ))\r\n\r\n                    }\r\n                \r\n                \r\n            </div>\r\n        \r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                \r\n                \r\n                     \r\n                    console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n               \r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n    //     useEffect(() =>{\r\n\r\n//         getGifs( category )\r\n//             .then(setImages);\r\n\r\n//     }, [ category ]);\r\n\r\n\r\n\r\n    return state; // {data:[], loading: true}\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n\r\n    const [categories, setCategories] = useState(['blanco']);\r\n\r\n    // const handleaAdd = () => {\r\n\r\n    //     // setCategories ([...categories, 'verde']);\r\n\r\n    //     setCategories (cats => [...cats, 'verde']);\r\n       \r\n\r\n    // };\r\n\r\n    return (\r\n        <>\r\n\r\n            \r\n\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/> \r\n            <hr/>\r\n            \r\n\r\n            <ol>\r\n\r\n                {\r\n                    categories.map(category => (\r\n                         <GiftGrid \r\n                         key= {category}\r\n                         category = {category}\r\n                         />\r\n                         ))\r\n\r\n                }\r\n\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}